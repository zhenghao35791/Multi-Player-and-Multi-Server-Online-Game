<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<AgileJWebModel version="1.7.17.v20140508-2136">
    <type deep="true" elementName="ScoreAdding" isBinary="false" isDeprecated="false" modelMemberIdentifier="type:ScoreAdding" modifiers="public," packageName="" qualifiedName="ScoreAdding">
        <filters>
            <filter signature="all classes"/>
            <filter signature="all types"/>
            <filter signature="classes with a default constructor"/>
            <filter signature="concrete classes"/>
            <filter signature="inner types named {type-name}" switchValues="ScoreAdding"/>
            <filter signature="non java star package types"/>
            <filter signature="public types"/>
            <filter signature="source code types"/>
            <filter signature="top level source types"/>
            <filter signature="top level types"/>
            <filter signature="types named {type-name-pattern}" switchValues="ScoreAdding"/>
        </filters>
        <outermostType>
            <type deep="false" elementName="ScoreAdding" modelMemberIdentifier="type:ScoreAdding" modifiers="public," packageName="" qualifiedName="ScoreAdding"/>
        </outermostType>
        <field deep="true" elementName="tc" fieldLineTooltipDescription="ScoreAdding.tc&#10;references one&#10;TankClient" isBinary="false" isDeprecated="false" modelMemberIdentifier="field:ScoreAdding.tc" modifiers="">
            <filters>
                <filter signature="all fields"/>
                <filter signature="fields named {field-name-pattern}" switchValues="tc"/>
                <filter signature="package visible fields"/>
            </filters>
            <declarer>
                <type deep="false" elementName="ScoreAdding" modelMemberIdentifier="type:ScoreAdding" modifiers="public," packageName="" qualifiedName="ScoreAdding"/>
            </declarer>
            <rawType>
                <type deep="false" elementName="TankClient" modelMemberIdentifier="type:TankClient" modifiers="public," packageName="" qualifiedName="TankClient"/>
            </rawType>
            <containedType>
                <type deep="false" elementName="TankClient" modelMemberIdentifier="type:TankClient" modifiers="public," packageName="" qualifiedName="TankClient"/>
            </containedType>
        </field>
        <field deep="true" elementName="scoring" fieldLineTooltipDescription="ScoreAdding.scoring&#10;references one&#10;Image" isBinary="false" isDeprecated="false" modelMemberIdentifier="field:ScoreAdding.scoring" modifiers="">
            <filters>
                <filter signature="all fields"/>
                <filter signature="fields named {field-name-pattern}" switchValues="scoring"/>
                <filter signature="package visible fields"/>
            </filters>
            <declarer>
                <type deep="false" elementName="ScoreAdding" modelMemberIdentifier="type:ScoreAdding" modifiers="public," packageName="" qualifiedName="ScoreAdding"/>
            </declarer>
            <rawType>
                <type deep="false" elementName="Image" modelMemberIdentifier="type:java.awt.Image" modifiers="abstract,public," packageName="java.awt" qualifiedName="java.awt.Image"/>
            </rawType>
            <containedType>
                <type deep="false" elementName="Image" modelMemberIdentifier="type:java.awt.Image" modifiers="abstract,public," packageName="java.awt" qualifiedName="java.awt.Image"/>
            </containedType>
        </field>
        <field deep="true" elementName="x" fieldLineTooltipDescription="ScoreAdding.x&#10;references one&#10;int" isBinary="false" isDeprecated="false" modelMemberIdentifier="field:ScoreAdding.x" modifiers="private,">
            <filters>
                <filter signature="all fields"/>
                <filter signature="fields named {field-name-pattern}" switchValues="x"/>
                <filter signature="private fields"/>
            </filters>
            <declarer>
                <type deep="false" elementName="ScoreAdding" modelMemberIdentifier="type:ScoreAdding" modifiers="public," packageName="" qualifiedName="ScoreAdding"/>
            </declarer>
            <rawType>
                <type deep="false" elementName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
            </rawType>
            <containedType>
                <type deep="false" elementName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
            </containedType>
        </field>
        <field deep="true" elementName="y" fieldLineTooltipDescription="ScoreAdding.y&#10;references one&#10;int" isBinary="false" isDeprecated="false" modelMemberIdentifier="field:ScoreAdding.y" modifiers="private,">
            <filters>
                <filter signature="all fields"/>
                <filter signature="fields named {field-name-pattern}" switchValues="y"/>
                <filter signature="private fields"/>
            </filters>
            <declarer>
                <type deep="false" elementName="ScoreAdding" modelMemberIdentifier="type:ScoreAdding" modifiers="public," packageName="" qualifiedName="ScoreAdding"/>
            </declarer>
            <rawType>
                <type deep="false" elementName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
            </rawType>
            <containedType>
                <type deep="false" elementName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
            </containedType>
        </field>
        <field deep="true" elementName="w" fieldLineTooltipDescription="ScoreAdding.w&#10;references one&#10;int" isBinary="false" isDeprecated="false" modelMemberIdentifier="field:ScoreAdding.w" modifiers="private,">
            <filters>
                <filter signature="all fields"/>
                <filter signature="fields named {field-name-pattern}" switchValues="w"/>
                <filter signature="private fields"/>
            </filters>
            <declarer>
                <type deep="false" elementName="ScoreAdding" modelMemberIdentifier="type:ScoreAdding" modifiers="public," packageName="" qualifiedName="ScoreAdding"/>
            </declarer>
            <rawType>
                <type deep="false" elementName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
            </rawType>
            <containedType>
                <type deep="false" elementName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
            </containedType>
        </field>
        <field deep="true" elementName="h" fieldLineTooltipDescription="ScoreAdding.h&#10;references one&#10;int" isBinary="false" isDeprecated="false" modelMemberIdentifier="field:ScoreAdding.h" modifiers="private,">
            <filters>
                <filter signature="all fields"/>
                <filter signature="fields named {field-name-pattern}" switchValues="h"/>
                <filter signature="private fields"/>
            </filters>
            <declarer>
                <type deep="false" elementName="ScoreAdding" modelMemberIdentifier="type:ScoreAdding" modifiers="public," packageName="" qualifiedName="ScoreAdding"/>
            </declarer>
            <rawType>
                <type deep="false" elementName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
            </rawType>
            <containedType>
                <type deep="false" elementName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
            </containedType>
        </field>
        <field deep="true" elementName="Live" fieldLineTooltipDescription="ScoreAdding.Live&#10;references one&#10;boolean" isBinary="false" isDeprecated="false" modelMemberIdentifier="field:ScoreAdding.Live" modifiers="private,">
            <filters>
                <filter signature="all fields"/>
                <filter signature="fields named {field-name-pattern}" switchValues="Live"/>
                <filter signature="private fields"/>
            </filters>
            <declarer>
                <type deep="false" elementName="ScoreAdding" modelMemberIdentifier="type:ScoreAdding" modifiers="public," packageName="" qualifiedName="ScoreAdding"/>
            </declarer>
            <rawType>
                <type deep="false" elementName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
            </rawType>
            <containedType>
                <type deep="false" elementName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
            </containedType>
        </field>
        <method deep="true" elementName="isLive" isBinary="false" isDeprecated="false" modelMemberIdentifier="method:ScoreAdding.isLive(()Z)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="getter methods"/>
                <filter signature="methods named {method-name-pattern}" switchValues="isLive"/>
                <filter signature="methods of {method-owner}" switchValues="ScoreAdding"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" elementName="ScoreAdding" modelMemberIdentifier="type:ScoreAdding" modifiers="public," packageName="" qualifiedName="ScoreAdding"/>
            </declarer>
            <return>
                <type deep="false" elementName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
            </return>
        </method>
        <method deep="true" elementName="setLive" isBinary="false" isDeprecated="false" modelMemberIdentifier="method:ScoreAdding.setLive((Z)V)" modifiers="public," parameterNames="live">
            <filters>
                <filter signature="all methods"/>
                <filter signature="methods named {method-name-pattern}" switchValues="setLive"/>
                <filter signature="methods of {method-owner}" switchValues="ScoreAdding"/>
                <filter signature="public methods"/>
                <filter signature="setter methods"/>
            </filters>
            <declarer>
                <type deep="false" elementName="ScoreAdding" modelMemberIdentifier="type:ScoreAdding" modifiers="public," packageName="" qualifiedName="ScoreAdding"/>
            </declarer>
            <parameterTypes>
                <type deep="false" elementName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
            </parameterTypes>
            <return>
                <type deep="false" elementName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
            </return>
        </method>
        <method deep="true" elementName="ScoreAdding" isBinary="false" isDeprecated="false" modelMemberIdentifier="method:ScoreAdding.ScoreAdding(()V)" modifiers="public,">
            <filters>
                <filter signature="constructors"/>
                <filter signature="default constructors"/>
                <filter signature="methods named {method-name-pattern}" switchValues="ScoreAdding"/>
                <filter signature="methods of {method-owner}" switchValues="ScoreAdding"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" elementName="ScoreAdding" modelMemberIdentifier="type:ScoreAdding" modifiers="public," packageName="" qualifiedName="ScoreAdding"/>
            </declarer>
        </method>
        <method deep="true" elementName="draw" isBinary="false" isDeprecated="false" modelMemberIdentifier="method:ScoreAdding.draw((QGraphics;II)V)" modifiers="public," parameterNames="g,offsetX,offsetY">
            <filters>
                <filter signature="all methods"/>
                <filter signature="methods named {method-name-pattern}" switchValues="draw"/>
                <filter signature="methods of {method-owner}" switchValues="ScoreAdding"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" elementName="ScoreAdding" modelMemberIdentifier="type:ScoreAdding" modifiers="public," packageName="" qualifiedName="ScoreAdding"/>
            </declarer>
            <parameterTypes>
                <type deep="false" elementName="Graphics" modelMemberIdentifier="type:java.awt.Graphics" modifiers="abstract,public," packageName="java.awt" qualifiedName="java.awt.Graphics"/>
                <type deep="false" elementName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
                <type deep="false" elementName="int" modelMemberIdentifier="type:int" modifiers="" packageName="" qualifiedName="int"/>
            </parameterTypes>
            <return>
                <type deep="false" elementName="void" modelMemberIdentifier="type:void" modifiers="" packageName="" qualifiedName="void"/>
            </return>
        </method>
        <method deep="true" elementName="getRect" isBinary="false" isDeprecated="false" modelMemberIdentifier="method:ScoreAdding.getRect(()QRectangle;)" modifiers="public,">
            <filters>
                <filter signature="all methods"/>
                <filter signature="getter methods"/>
                <filter signature="methods named {method-name-pattern}" switchValues="getRect"/>
                <filter signature="methods of {method-owner}" switchValues="ScoreAdding"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" elementName="ScoreAdding" modelMemberIdentifier="type:ScoreAdding" modifiers="public," packageName="" qualifiedName="ScoreAdding"/>
            </declarer>
            <return>
                <type deep="false" elementName="Rectangle" modelMemberIdentifier="type:java.awt.Rectangle" modifiers="public," packageName="java.awt" qualifiedName="java.awt.Rectangle"/>
            </return>
        </method>
        <method deep="true" elementName="hitScoreAdding" isBinary="false" isDeprecated="false" modelMemberIdentifier="method:ScoreAdding.hitScoreAdding((QTank;)Z)" modifiers="public," parameterNames="t">
            <filters>
                <filter signature="all methods"/>
                <filter signature="methods named {method-name-pattern}" switchValues="hitScoreAdding"/>
                <filter signature="methods of {method-owner}" switchValues="ScoreAdding"/>
                <filter signature="public methods"/>
            </filters>
            <declarer>
                <type deep="false" elementName="ScoreAdding" modelMemberIdentifier="type:ScoreAdding" modifiers="public," packageName="" qualifiedName="ScoreAdding"/>
            </declarer>
            <parameterTypes>
                <type deep="false" elementName="Tank" modelMemberIdentifier="type:Tank" modifiers="public," packageName="" qualifiedName="Tank"/>
            </parameterTypes>
            <return>
                <type deep="false" elementName="boolean" modelMemberIdentifier="type:boolean" modifiers="" packageName="" qualifiedName="boolean"/>
            </return>
        </method>
        <nonRecursiveSubtypes/>
        <nonRecursiveSupertypes>
            <type deep="false" elementName="Object" modelMemberIdentifier="type:java.lang.Object" modifiers="public," packageName="java.lang" qualifiedName="java.lang.Object"/>
        </nonRecursiveSupertypes>
        <outwardDependencies>
            <type deep="false" elementName="ImageIcon" modelMemberIdentifier="type:javax.swing.ImageIcon" modifiers="public," packageName="javax.swing" qualifiedName="javax.swing.ImageIcon"/>
            <type deep="false" elementName="Tank" modelMemberIdentifier="type:Tank" modifiers="public," packageName="" qualifiedName="Tank"/>
            <type deep="false" elementName="Image" modelMemberIdentifier="type:java.awt.Image" modifiers="abstract,public," packageName="java.awt" qualifiedName="java.awt.Image"/>
            <type deep="false" elementName="Graphics" modelMemberIdentifier="type:java.awt.Graphics" modifiers="abstract,public," packageName="java.awt" qualifiedName="java.awt.Graphics"/>
            <type deep="false" elementName="Rectangle" modelMemberIdentifier="type:java.awt.Rectangle" modifiers="public," packageName="java.awt" qualifiedName="java.awt.Rectangle"/>
            <type deep="false" elementName="TankClient" modelMemberIdentifier="type:TankClient" modifiers="public," packageName="" qualifiedName="TankClient"/>
        </outwardDependencies>
    </type>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAABx0lEQVR4nOWU3yuDYRTH98e49SNqJTUSr0zaWtpGtjaWMWRujNm0lzGyzI/CWDNLKLXwJhOmKNqFSC5GJhThhrlx+fU+z7IkF6+59K3Tec7znD6dc97nfUSibzq+O4fG346KcR3yB+SQjmppTPa/5woWuzFOYY0LbbCEOlNG4rzeSpDztKC5jjKwnB2rpyvYv9rD4fUB9YGjWTg4BzI6JL+DkzZJpV0hCyKX2/hJOxdb6F6z0soFj6Vm1gx9wIi5o5kUaDu2ibGIG9zZKo1vX27gCvfTvPqgRRiY8WihmNTCfzhPIVfPcej8DSlrXTTDGDRRq/bqQfIFgUl7OT0MPJFkxQfxKLLspci0lVAj6zy2HGKnFJJBGb+uEF5xgUvG3wAXBd+93KNwSAGJS04tGA1h5YSD2teKMo9aeMVkZpJBObQ+ExLvb8mPFdtH85IVI7vJLl7fE9Dw54pJHVqWWWHg2FOcXqWqKT1/M1hc8jP+qofEI9w7E1B7DTTvVz9LDzeKLBsDZkQFXaAJtnUn+sNu6kms4qHiPhlInmDoV3i2neHbrYNyxgAlDyOexGQ/LeinSJtV0yYUDalRPFxDfa3vj2/F/9YHYK+OD5EVjdEAAAAASUVORK5CYII=" height="16" modelElementIdentifier="type:ScoreAdding" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAMklEQVR4nGNgGAWjgGhww8n/PzqmmsGPyxv+gwCIpqrByIAmLn7eMYG6BtMkjEfB4AcAIhZF9iVxU3wAAAAASUVORK5CYII=" height="16" modelElementIdentifier="field:ScoreAdding.Live" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAMklEQVR4nGNgGAWjgGhww8n/PzqmmsGPyxv+gwCIpqrByIAmLn7eMYG6BtMkjEfB4AcAIhZF9iVxU3wAAAAASUVORK5CYII=" height="16" modelElementIdentifier="field:ScoreAdding.h" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAVElEQVR4nGNgGAXDF6hlL/9PdUM9mjf/D27b9R9EU83QDSfv/9cpWPEfBEA0iE8VgyWTF/xHBiA+xYbCXOtYvh5sKIimiqsFYub8x4UpdvUoGPwAADrAS0vlr+zFAAAAAElFTkSuQmCC" height="16" modelElementIdentifier="field:ScoreAdding.scoring" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAVElEQVR4nGNgGAXDF6hlL/9PdUM9mjf/D27b9R9EU83QDSfv/9cpWPEfBEA0iE8VgyWTF/xHBiA+xYbCXOtYvh5sKIimiqsFYub8x4UpdvUoGPwAADrAS0vlr+zFAAAAAElFTkSuQmCC" height="16" modelElementIdentifier="field:ScoreAdding.tc" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAMklEQVR4nGNgGAWjgGhww8n/PzqmmsGPyxv+gwCIpqrByIAmLn7eMYG6BtMkjEfB4AcAIhZF9iVxU3wAAAAASUVORK5CYII=" height="16" modelElementIdentifier="field:ScoreAdding.w" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAMklEQVR4nGNgGAWjgGhww8n/PzqmmsGPyxv+gwCIpqrByIAmLn7eMYG6BtMkjEfB4AcAIhZF9iVxU3wAAAAASUVORK5CYII=" height="16" modelElementIdentifier="field:ScoreAdding.x" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAMklEQVR4nGNgGAWjgGhww8n/PzqmmsGPyxv+gwCIpqrByIAmLn7eMYG6BtMkjEfB4AcAIhZF9iVxU3wAAAAASUVORK5CYII=" height="16" modelElementIdentifier="field:ScoreAdding.y" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAA6ElEQVR4nGNgoBD8BwL99V7/FatM/ivVmf7f/fbof0rNBAOHbZFwA/sfLgCzqWowMhgaBhMdFKXbJ/xnbfT8rzc14T+IjUsdSZHnu7j4f/yqkv9bLs39P+PYBDAbJIbPcILBULit93/Y8oL/q8/PRMIzwGIgObzexAeYGzz+N+1t+t+yrwWB97eAxUByZBss2xP2P2kV0HUby6C4FEyDxEByZBucsq71v/2M+P8dOxv/d+xo/N8JxCC2/fSE/yA5sg0GAec5Of+9Zqf+n76343/T1nowGyRGkaEwkL+xC57cQGyqGDoyAQA+++MipdXKzwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:ScoreAdding.ScoreAdding(()V)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:ScoreAdding.draw((QGraphics;II)V)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:ScoreAdding.getRect(()QRectangle;)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:ScoreAdding.hitScoreAdding((QTank;)Z)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:ScoreAdding.isLive(()Z)" width="22"/>
    <icon data="iVBORw0KGgoAAAANSUhEUgAAABYAAAAQCAYAAAAS7Y8mAAAAuElEQVR4nGNgGAXDD5Run/CftdHzv97UhP8gNlUM9V1c/D9+Vcn/LZfm/p9xbAKYDRKjyNDCbb3/w5YX/F99fiYSngEWA8mRbTBzg8f/pr1N/1v2tSDw/hawGEiObINle8L+J60Cum5jGRSXgmmQGEiObINT1rX+t58R/79jZ+P/jh2N/zuBGMS2n57wHyRHtsEg4Dwn57/X7NT/0/d2/G/aWg9mg8QoMhQG8jd2wZMbiE0VQ0cmAAD3yYO+kqE/HwAAAABJRU5ErkJggg==" height="16" modelElementIdentifier="method:ScoreAdding.setLive((Z)V)" width="22"/>
</AgileJWebModel>
